plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    def assertjVersion = '3.16.1'
    def approvalVersion = '9.2.0'

    def junit4Version   = '4.13'
    def junitBomVersion = '5.6.2'

    testImplementation(platform("org.junit:junit-bom:$junitBomVersion"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    testImplementation("junit:junit:${junit4Version}")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }

    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }

    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("com.approvaltests:approvaltests:${approvalVersion}")
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-Xlint:all")
    options.compilerArgs.add("--enable-preview")
}

test {
    jvmArgs("--enable-preview")
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'kata.App'
        )
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
