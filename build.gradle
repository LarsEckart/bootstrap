plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    def junitVersion = '5.6.1'
    def assertjVersion = '3.15.0'
    def junit4Version = '4.13'

    testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testImplementation("junit:junit:${junit4Version}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")

    testImplementation 'io.cucumber:cucumber-java:5.6.0'
    testImplementation 'io.cucumber:cucumber-junit:5.6.0'
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-Xlint:all")
    options.compilerArgs.add("--enable-preview")
}

test {
    jvmArgs("--enable-preview")
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}